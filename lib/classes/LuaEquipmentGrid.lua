

--- @class LuaEquipmentGrid
--- An equipment grid is for example the inside of a power armor.
local equipment_grid = {}


--- @type LuaEquipmentGridPrototype
---  (R)
equipment_grid.prototype = nil

--- @type uint
---  (R)
--- Width of the equipment grid.
equipment_grid.width = nil

--- @type uint
---  (R)
--- Height of the equipment grid.
equipment_grid.height = nil

--- @type LuaEquipment[]
---  (R)
--- All the equipment in this grid.
equipment_grid.equipment = {}

--- @type double
---  (R)
--- Total energy per tick generated by the equipment inside this grid.
equipment_grid.generator_energy = nil

--- @type double
---  (R)
--- Maximum energy per tick that can be created by any solar panels in the equipment grid. Actual generated energy
--- varies depending on the daylight levels.
equipment_grid.max_solar_energy = nil

--- @type double
---  (R)
--- The total energy stored in all batteries in the equipment grid.
equipment_grid.available_in_batteries = nil

--- @type double
---  (R)
--- Total energy storage capacity of all batteries in the equipment grid.
equipment_grid.battery_capacity = nil

--- @type float
---  (R)
--- The amount of shields this equipment grid has.
equipment_grid.shield = nil

--- @type float
---  (R)
--- The maximum amount of shields this equipment grid has.
equipment_grid.max_shield = nil

--- @type boolean
---  (RW)
--- True if this movement bonus equipment is turned off, otherwise false.
equipment_grid.inhibit_movement_bonus = nil

--- @type boolean
---  (R)
--- Is this object valid? This Lua object holds a reference to an object within the game engine. It is possible that
--- the game-engine object is removed whilst a mod still holds the corresponding Lua object. If that happens, the
--- object becomes invalid, i.e. this attribute will be `false`. Mods are advised to check for object validity if any
--- change to the game state might have occurred between the creation of the Lua object and its access.
equipment_grid.valid = nil

--- @type string
---  (R)
--- The class name of this object. Available even when `valid` is false. For LuaStruct objects it may also be suffixed
--- with a dotted path to a member of the struct.
equipment_grid.object_name = nil



--- @alias LuaEquipmentGrid_take_p
--- @field position EquipmentPosition | nil (Optional)  Take the equipment that contains this position in the grid.
--- @field equipment LuaEquipment | nil  (Optional)  Take this exact equipment.
--- @field by_player PlayerIdentification | nil (Optional)  If provided the action is done 'as' this player and [on_player_removed_equipment](on_player_removed_equipment) is triggered.

--- Remove an equipment from the grid.
--- 
--- @param params LuaEquipmentGrid_take_p
function equipment_grid.take(params)
    params = nil
end


--- Remove all equipment from the grid.
--- 
--- @overload fun()
--- @param by_player PlayerIdentification | nil (Optional) 
function equipment_grid.take_all(by_player)
    by_player = nil
end


--- Clear all equipment from the grid, removing it without actually returning it.
--- 
--- @overload fun()
--- @param by_player PlayerIdentification | nil (Optional) 
function equipment_grid.clear(by_player)
    by_player = nil
end


--- @alias LuaEquipmentGrid_put_p
--- @field name string                   Equipment prototype name
--- @field position EquipmentPosition | nil (Optional)  Grid position to put the equipment in.
--- @field by_player PlayerIdentification | nil (Optional)  If provided the action is done 'as' this player and [on_player_placed_equipment](on_player_placed_equipment) is triggered.

--- Insert an equipment into the grid.
--- 
--- @param params LuaEquipmentGrid_put_p
function equipment_grid.put(params)
    params = nil
end


--- @alias LuaEquipmentGrid_can_move_p
--- @field equipment LuaEquipment        The equipment to move
--- @field position EquipmentPosition    Where to put it

--- Check whether moving an equipment would succeed.
--- 
--- @param params LuaEquipmentGrid_can_move_p
function equipment_grid.can_move(params)
    params = nil
end


--- @alias LuaEquipmentGrid_move_p
--- @field equipment LuaEquipment        The equipment to move
--- @field position EquipmentPosition    Where to put it

--- Move an equipment within this grid.
--- 
--- @param params LuaEquipmentGrid_move_p
function equipment_grid.move(params)
    params = nil
end


--- Find equipment in the Equipment Grid based off a position.
--- 
--- @param position EquipmentPosition   
function equipment_grid.get(position)
    position = nil
end


--- Get counts of all equipment in this grid.
--- @return nil                         
function equipment_grid.get_contents()
    return nil
end


--- All methods and properties that this object supports.
--- @return nil                         
function equipment_grid.help()
    return nil
end


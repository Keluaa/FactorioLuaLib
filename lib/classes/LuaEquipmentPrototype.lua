

--- @class LuaEquipmentPrototype
--- Prototype of a modular equipment.
local equipment_prototype = {}


--- @type string
---  (R)
--- Name of this prototype.
equipment_prototype.name = nil

--- @type string
---  (R)
--- Type of this equipment prototype.
equipment_prototype.type = nil

--- @type string
---  (R)
--- Order string of this prototype.
equipment_prototype.order = nil

--- @type LocalisedString
---  (R)
equipment_prototype.localised_name = nil

--- @type LocalisedString
---  (R)
equipment_prototype.localised_description = nil

--- @type table
---  (R)
--- Shape of this equipment prototype.
equipment_prototype.shape = nil

--- @type LuaItemPrototype
---  (R)
--- The result item when taking this equipment out of an equipment grid. `nil` if there is no result item.
equipment_prototype.take_result = nil

--- @type double
---  (R)
--- The max power generated by this equipment.
equipment_prototype.energy_production = nil

--- @type float
---  (R)
--- The shield value of this equipment. 0 for non-shield equipment.
equipment_prototype.shield = nil

--- @type double
---  (R)
--- The energy per shield point restored. 0 for non-shield equipment.
equipment_prototype.energy_per_shield = nil

--- @type table
---  (R)
--- The logistic parameters for this roboport equipment.
equipment_prototype.logistic_parameters = nil

--- @type double
---  (R)
equipment_prototype.energy_consumption = nil

--- @type float
---  (R)
equipment_prototype.movement_bonus = nil

--- @type LuaElectricEnergySourcePrototype
---  (R)
--- The energy source prototype for the equipment.
equipment_prototype.energy_source = nil

--- @type string[]
---  (R)
--- Category names for this equipment. These categories will be used to determine whether this equipment is allowed in
--- a particular equipment grid.
--- 
--- @see LuaEquipmentGridPrototype#equipment_categories @
equipment_prototype.equipment_categories = {}

--- @type LuaBurnerPrototype
---  (R)
--- The burner energy source prototype this equipment uses or `nil`.
equipment_prototype.burner_prototype = nil

--- @type LuaElectricEnergySourcePrototype
---  (R)
--- The electric energy source prototype this equipment uses or `nil`.
equipment_prototype.electric_energy_source_prototype = nil

--- @type Color
---  (R)
--- The background color of this equipment prototype.
equipment_prototype.background_color = nil

--- @type AttackParameters
---  (R)
--- The equipment attack parameters or `nil`.
equipment_prototype.attack_parameters = nil

--- @type boolean
---  (R)
--- Is this active defense equipment automatic. Returns false if not active defense equipment.
equipment_prototype.automatic = nil

--- @type boolean
---  (R)
--- Is this object valid? This Lua object holds a reference to an object within the game engine. It is possible that
--- the game-engine object is removed whilst a mod still holds the corresponding Lua object. If that happens, the
--- object becomes invalid, i.e. this attribute will be `false`. Mods are advised to check for object validity if any
--- change to the game state might have occurred between the creation of the Lua object and its access.
equipment_prototype.valid = nil

--- @type string
---  (R)
--- The class name of this object. Available even when `valid` is false. For LuaStruct objects it may also be suffixed
--- with a dotted path to a member of the struct.
equipment_prototype.object_name = nil



--- All methods and properties that this object supports.
--- @return nil                         
function equipment_prototype.help()
    return nil
end

